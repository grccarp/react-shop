'use strict';

var _fs = require('fs');

var _fs2 = _interopRequireDefault(_fs);

var _cssModulesFlowTypesPrinter = require('css-modules-flow-types-printer');

var _cssModulesFlowTypesPrinter2 = _interopRequireDefault(_cssModulesFlowTypesPrinter);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getTokens(content) {
  const tokens = [];

  // Only `locals` export is desired
  const locals = content.match(/exports\.locals = ([\s\S]*);/);

  if (!locals) return tokens;
  let match;

  // RegExp.exec is state-full, so we need to initialize new one for each run
  const re = /"(.*?)":.*\n/g;
  while ((match = re.exec(locals[1])) !== null) tokens.push(match[1]);

  return tokens;
}

module.exports = function cssModulesFlowTypesLoader(content) {
  const tokens = getTokens(content);

  // NOTE: We cannot use .emitFile as people might use this with devServer
  // (e.g. in memory storage).
  const outputPath = this.resourcePath + '.flow';
  _fs2.default.writeFile(outputPath, (0, _cssModulesFlowTypesPrinter2.default)(tokens), {}, function () {});

  return content;
};